# -*- coding: utf-8 -*-
"""ML Decision Tree.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zsaO5seHjD_V8j6t4ahYhWzFl11Gy9KB
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score
from sklearn.linear_model import LogisticRegression
from sklearn.ensemble import BaggingClassifier

data=pd.read_csv("/content/diabetes.csv")

#checking null values
null_values = data.isnull().sum()
null_values

dataset_description = data.describe()
dataset_description

data

data.drop(['Pregnancies'], axis=1, inplace=True)

scaler = StandardScaler()
scaled_data = scaler.fit_transform(data)

X = data.iloc[:, :-1]
y = data.iloc[:, -1]

# Split the dataset into training and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=0)

sample_data = data.sample(n=300, random_state=0)

sample_data

x = sample_data.iloc[:, :-1]
Y = sample_data.iloc[:, -1]

x_train, x_test, Y_train, Y_test = train_test_split(x, Y, test_size=0.2, random_state=0)

dt = DecisionTreeClassifier(random_state=0)

dt.fit(x_train, Y_train)

predictions = dt.predict(x_test)

# Calculate accuracy
accuracy = accuracy_score(Y_test, predictions)
print("Accuracy of the Decision Tree Classifier in % :", accuracy*100)

# Bagging with Decision Tree
dt_bagging_model = BaggingClassifier(base_estimator=DecisionTreeClassifier(), n_estimators=10, random_state=0)
dt_bagging_model.fit(x_train, Y_train)
dt_predictions = dt_bagging_model.predict(x_test)
dt_accuracy = accuracy_score(Y_test, dt_predictions)
print("Accuracy of Decision Tree with Bagging:", dt_accuracy)